version: 2
jobs:
  nodeModules:
    docker:
      - image: circleci/node:11.4.0

    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - run: yarn --frozen-lockfile
      - run:
          command: yarn autoclean --force
      - save_cache:
          paths:
            - node_modules
            - ~/.yarn
            - ~/.config/yarn
          key: node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
  deployToStaging:
    docker:
      - image: circleci/node:11.4.0

    steps:
      - checkout
      - run:
          name: "Deploy Branch to Heroku"
          command: git push -f https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git $CIRCLE_BRANCH:master

  runPerfTest:
    parallelism: 2
    docker:
      - image: kporras07/lighthouse-ci

    steps:
      - checkout
      - run:
          name: "Run lighthouse against staging deployment"
          environment:
            TEST_URL: https://website-on-a-budget-staging.herokuapp.com
          command: |
            lighthouse $TEST_URL \
                          --port=9222 \
                          --chrome-flags=\"--headless\" \
                          --output-path=/home/chrome/reports/anonymous-"$(echo -n $CIRCLE_SHELL_ENV | md5sum | awk '{print $1}')" \
                          --output=json \
                          --output=html
      - persist_to_workspace:
          root: /home/chrome
          paths:
            - reports

  updatePr:
    docker:
      - image: circleci/node:11.4.0

    steps:
      - checkout
      - restore_cache:
        keys:
          - node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: "."
      - store_artifacts:
          path: reports
          destination: reports
      - run:
          name: "Analyze and comment to the PR"
          command: ./circleci/build-score.js budget.json reports


workflows:
  version: 2
  deployAndTest:
    jobs:
      - nodeModules
      - deployToStaging:
        requires:
          - nodeModules
      - runPerfTest:
        requires:
          - deployToStaging
      - updatePr:
          requires:
            - runPerfTest
